##################################################################
# NOTE: RPM really wasn't designed for cross builds.
#
# We don't want to use --target, because the output binaries
# are supposed to get installed on the build host. Therefore,
# I am exploiting a macro hack. This RPM is designed to be run
# with a command line like:
#
#    rpmbuild --define "crossarch i386" --define "crossos coyotos"
#
# If the define is not provided, the build will default to
# target i386.
#
# NOTE: Building this requires that a suitable pre-gcc has 
# been installed in the target build environment! The current
# build process relies on this being done BY HAND
##################################################################

%bcond_with gcc4

%define CROSSARCH i386
%define CROSSOS coyotos
%define CROSSOSNAME Coyotos

%define GCCMAJOR %{?with_gcc4:gcc4}%{!?with_gcc4:gcc3}
%define CROSSTARGET %{CROSSARCH}-unknown-%{CROSSOS}
%define CROSSROOT /%{CROSSOS}
%define CROSSHOSTROOT %{CROSSROOT}/host
%define CROSSSYSROOT %{CROSSROOT}/sysroot-%{CROSSARCH}

%define debug_package %{nil}
%define __os_install_post %{nil}

Summary: The newlib embedded C library
Name: %{CROSSOS}-%{CROSSARCH}-newlib
Version: 1.18.0
Release: 3.cvs20100601%{?dist}
License: GPL
Group: Development/Tools
URL: http://www.coyotos.org
Source: newlib-%{version}.tar.bz2
Patch0: newlib-cvs20100601.patch.bz2
Patch1: capos-newlib-%{version}.patch

Buildroot: %{_tmppath}/%{CROSSOS}-newlib-root
BuildRequires: %{CROSSOS}-%{CROSSARCH}-%{GCCMAJOR}-gcc

%description
Newlib is a C library designed for use in embedded and cross environments.
This version has been patched to include various %{CROSSOSNAME}-specific 
enhancements.

# %%define _gnu %{nil}

%prep
%setup -q -n newlib-%{version}
%patch0 -p1
%patch1 -p1

%build
%define optflags ""
rm -rf ../build-newlib-%{CROSSARCH}
mkdir ../build-newlib-%{CROSSARCH}

##	--bindir=%{CROSSHOSTROOT}/bin
##	--sbindir=%{CROSSHOSTROOT}/sbin
##	--sysconfdir=%{CROSSHOSTROOT}/etc
##	--datadir=%{CROSSHOSTROOT}/share
##	--libexecdir=%{CROSSHOSTROOT}/libexec
##	--localstatedir=%{CROSSHOSTROOT}/var
##	--sharedstatedir=%{CROSSHOSTROOT}/include
##	--includedir=%{CROSSROOT}/include
##	--libdir=%{CROSSROOT}/lib

(cd ../build-newlib-%{CROSSARCH}; PATH=%{CROSSHOSTROOT}/bin:${PATH} ../newlib-%{version}/configure \
	--prefix=%{CROSSHOSTROOT} \
	--mandir=%{CROSSHOSTROOT}/share/man \
	--infodir=%{CROSSHOSTROOT}/share/info \
	--with-local-prefix=%{CROSSSYSROOT} \
        --target %{CROSSTARGET})

PATH=%{CROSSHOSTROOT}/bin:$PATH make -C ../build-newlib-%{CROSSARCH} tooldir=%{CROSSSYSROOT}/usr all

#make -k check < /dev/null > check.log 2>&1 || :
#echo ====================TESTING=========================
#cat check.log
#echo ====================TESTING END=====================

%install
rm -rf %{buildroot}
mkdir -p %{buildroot}%{_prefix}

PATH=%{CROSSHOSTROOT}/bin:$PATH make -C ../build-newlib-%{CROSSARCH} DESTDIR=%{buildroot} tooldir=%{CROSSSYSROOT}/usr install

# Don't install libnosys.a
rm -f %{buildroot}%{CROSSSYSROOT}/usr/lib/libnosys.a

# Don't install development stuff:
rm -f %{buildroot}%{CROSSHOSTROOT}/share/info/standards.info
rm -f %{buildroot}%{CROSSHOSTROOT}/share/info/configure.info

%clean
rm -rf %{buildroot}

## Cross-build does not generate translations:
#%files -n %{CROSSOS}-%{_arch}-binutils -f binutils.lang
%files
%defattr(-,root,root)
%{CROSSSYSROOT}/usr/include/*
%{CROSSSYSROOT}/usr/lib/*
#%{_infodir}/man1/*
#%{_mandir}/man1/*

%changelog
* Sat Sep 26 2005 Jonathan Shapiro <shap@eros-os.org> 2.16.1-1
- initial setup of spec file. Thought about applying the Fedora
  patches, but better (I think) to see how it goes without them
  first, since we are cross building. Much of the install stuff
  above is based on the Fedora spec file for binutils-2.15.94.0.2.2-2.1
