# Copyright (c) 2006, The EROS Group, LLC.
# All rights reserved.
# 
# This software was developed to support the EROS secure operating
# system project (http://www.eros-os.org). The latest version of
# the libsherpa library can be found at http://www.coyotos.org.
# 
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
# 
# 3. Neither the name of the The EROS Group, LLC nor the name of
#    Johns Hopkins University, nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# @configure_input@

# Master Makefile for the libsherpa library.

SHELL = /bin/sh

#### Start of system configuration section. ####

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@

CC = @CCACHE@ @CC@
CXX = @CCACHE@ @CXX@
AR = ar

@SET_MAKE@

VERSION=@VERSION@
BUILD=@BUILD@

# Set RANLIB = echo if your system doesn't have or need ranlib.
RANLIB = @RANLIB@

# Use cp if you don't have install.
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@

DEFS = @DEFS@
LIBS = @LIBS@

CFLAGS = @CFLAGS@ 
LDFLAGS = @LDFLAGS@

MAKEINFO = makeinfo
TEXI2DVI = texi2dvi

prefix = @prefix@
exec_prefix = @exec_prefix@

# Where to install the executables.
bindir = @bindir@

# Where to put the system-wide files
libdir = @libdir@

# Where to put shared, read-only data
datadir = @datadir@

# shap: I have seen autoconf get this consistently wrong, which
# is why the following obscure test is present. Surely there must
# be a better way? I don't like this solution either, as it does not
# work robustly when the user messes with --prefix...

# Where to put the Info files
shareinfodir=$(findstring $(datadir)/info,$(wildcard $(datadir)/*))
infodir = $(if $(shareinfodir),$(shareinfodir),@infodir@)

# Where to put the manual pages.
sharemandir=$(findstring $(datadir)/man,$(wildcard $(datadir)/*))
mandir = $(if $(sharemandir),$(sharemandir),@mandir@)

#### End of system configuration section. ####

FLAGS_TO_PASS = \
	AR='$(AR)' \
	CC='$(CC)' \
	LIBPROGS='$(LIBPROGS)' \
	LIBS='$(LIBS)' \
	MAKE='$(MAKE)' \
	MAKEINFO='$(MAKEINFO)' \
	RANLIB='$(RANLIB)' \
	TEXI2DVI='$(TEXI2DVI)' \
	YACC='$(YACC)' \
	bindir='$(bindir)' \
	infodir='$(infodir)' \
	libdir='$(libdir)' \
	mandir='$(mandir)' \
	prefix='$(prefix)' \
	exec_prefix='$(exec_prefix)'

### Subdirectories to run make in for the primary targets.
# Unix source subdirs, where we'll want to run lint and etags:
USOURCE_SUBDIRS = libsherpa astmaker
ifeq "@HAVE_MAKEINFO@" "no"
SKIP_DOCS="yes"
endif
ifeq "@HAVE_TEXI2DVI@" "no"
SKIP_DOCS="yes"
endif
ifeq "@HAVE_DVIPS@" "no"
SKIP_DOCS="yes"
endif

ifeq "$(SKIP_DOCS)" ""
#DOC_SUBDIRS=doc
DOC_SUBDIRS=
endif

CLEAN_SUBDIRS=bntest

# All other subdirs:
SUBDIRS = ${USOURCE_SUBDIRS} $(DOC_SUBDIRS)

# Set default target.
all:

.PHONY: all install uninstall installdirs
all install uninstall installdirs: Makefile all-local
	@for subdir in $(SUBDIRS); do \
	  echo "making $@ in $$subdir"; \
	  ( cd $$subdir && $(MAKE) $(FLAGS_TO_PASS) $@ ) || exit 1; \
	done

installdirs: installdirs-local

install: all install-local install-info
uninstall: uninstall-info

.PHONY: all-local
all-local:

install-info:
uninstall-info:

#.PHONY: info dvi clean-info install-info
#info dvi clean-info install-info uninstall-info:
#	cd doc && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1

.PHONY: install-local
install-local: all-local
	@: nothing to do locally

.PHONY: installdirs-local
installdirs-local: all-local
	@: nothing to do locally

.PHONY: tags
tags:
	@for dir in $(TSUBDIRS); do echo making $@ in $$dir; cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1; cd ..; done
	@echo making $@ in .
	@ctags `for i in \`$(MAKE) SUBDIRS="$(TSUBDIRS)" ls\` ; do echo $(srcdir)/$$i ; done`

.PHONY: TAGS
TAGS:
	@for dir in $(TSUBDIRS); do echo making $@ in $$dir; cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1; cd ..; done
	@echo making $@ in .
	@etags `for i in \`$(MAKE) SUBDIRS="$(TSUBDIRS)" ls | grep -v 'make\[[0-9]\]'\` ; do echo $(srcdir)/$$i ; done`

.PHONY: ls
ls:
	@for dir in $(SUBDIRS); do \
		for i in `cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ | grep -v 'make\[[0-9]\]'` ; do \
			echo $$dir/$$i ; \
		done ; \
	done

.PHONY: clean
clean: clean-local
	@for dir in $(SUBDIRS); do echo making $@ in $$dir; cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1; cd ..; done
	@for dir in $(CLEAN_SUBDIRS); do echo making $@ in $$dir; cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1; cd ..; done

.PHONY: distclean
distclean: distclean-local
	@for dir in $(SUBDIRS); do echo making $@ in $$dir; cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1; cd ..; done
	@for dir in $(CLEAN_SUBDIRS); do echo making $@ in $$dir; cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1; cd ..; done
	rm -f Makefile

.PHONY: realclean
realclean: realclean-local
	@for dir in $(SUBDIRS); do echo making $@ in $$dir; cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1; cd ..; done
	@for dir in $(CLEAN_SUBDIRS); do echo making $@ in $$dir; cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1; cd ..; done
	rm -f config.status

.PHONY: mostlyclean-local
mostlyclean-local:
	-find . -name '*.m' -exec rm {} \;
	rm -f *~
	-rm -rf .\#* \#*
	-rm -rf self-ca

.PHONY: clean-local
clean-local: mostlyclean-local

.PHONY: distclean-local
distclean-local: clean-local
	rm -f Makefile
	rm -f tags TAGS
	-rm -f *.rpm *.tgz

.PHONY: realclean-local
realclean-local: distclean-local

.PHONY: saber
saber:
	@for dir in $(SUBDIRS); do cd $$dir && $(MAKE) $(FLAGS_TO_PASS) $@ || exit 1; cd ..; done

.PHONY: lint
lint:
	@for dir in $(USOURCE_SUBDIRS); do cd $$dir && $(MAKE) $(FLAGS_TO_PASS) xlint || exit 1; cd ..; done

# Tell versions [3.59,3.63) of GNU make not to export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
